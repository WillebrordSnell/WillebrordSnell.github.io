import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as o,f as t}from"./app-0f503e6a.js";const r={},c=t('<h1 id="avsd配置或实验记录" tabindex="-1"><a class="header-anchor" href="#avsd配置或实验记录" aria-hidden="true">#</a> AVSD配置或实验记录</h1><h2 id="实验配置须知" tabindex="-1"><a class="header-anchor" href="#实验配置须知" aria-hidden="true">#</a> 实验配置须知</h2><p>实验环境： GeForce RTX 3090 × 2<br> 服务器 env：avsd</p><p>batch size： 32 64(单卡会爆显存)：也就是说baseline上，一张3090最多把B设置成32</p><h2 id="实验思路" tabindex="-1"><a class="header-anchor" href="#实验思路" aria-hidden="true">#</a> 实验思路</h2><ol><li>可解释性</li></ol><blockquote><p>语意分割，视频层面Mask做&quot;扰动&quot;<br> 通过视频定位模型做可解释性</p></blockquote><ol start="2"><li>特征对齐</li></ol><blockquote><p>模态对齐：各模态和其对应的其他模态应具有相同的语意，但应考虑不用负样本而是聚类的方式</p></blockquote><ol start="3"><li>对话方面：通过Rva对历史进行回溯</li></ol><blockquote><p>通过指代消解这一角度入手 ?</p></blockquote>',11),l=[c];function i(s,d){return a(),o("div",null,l)}const u=e(r,[["render",i],["__file","AVSD.html.vue"]]);export{u as default};
